"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4160],{93400:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});var o=i(68152);const a=[(0,o.IL)('<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><ul><li>ADempiere has 2 client modes to access the ERP application: <ul><li>Java Swing which is rich client and runs perfectly via LAN</li><li>Web-based clients such as HTML and ZK Ajax that is mostly used via the Web.</li></ul></li><li>All clients will access the Application Dictionary or Data Model to get the same data treatment. However the sourcecode that access and display that has to be mapped.</li><li>The content below is posted by Low Heng Sin who is chiefly responsible for the ZK Ajax client completion started by Posterita. <ul><li>It illustrates the direct component to component mapping at the sourcecode level of the application.</li></ul></li></ul><h2 id="component-mapping" tabindex="-1"><a class="header-anchor" href="#component-mapping" aria-hidden="true">#</a> Component Mapping</h2><table><thead><tr><th>Swing Classs</th><th>Zk Class</th><th>Notes</th></tr></thead><tbody><tr><td>org.compiere.swing.CPanel</td><td>org.adempiere.webui.component.Panel</td><td>setLayout(layout) is replace by appendChild(layout). Layout manager is implemented as container component in Zk.</td></tr><tr><td>javax.swing.JLabel</td><td>org.adempiere.webui.component.Label</td><td></td></tr><tr><td>org.compiere.grid.ed.VLookup</td><td>org.adempiere.webui.editor.WTableDirEditor org.adempiere.webui.editor.WSearchEditor</td><td>WtableDirEditor for combo box, WsearchEditor for lookup.</td></tr><tr><td>org.compiere.grid.ed.VString</td><td>org.adempiere.webui.editor.WStringEditor</td><td></td></tr><tr><td>java.awt.GridBagLayout</td><td>org.adempiere.webui.component.Grid</td><td>Use GridFactory.newGridLayout()</td></tr><tr><td>javax.swing.JcomboBox</td><td>org.adempiere.webui.component.Listbox org.adempiere.webui.component.Combobox</td><td>Only Combobox support auto complete</td></tr><tr><td>java.awt.BorderLayout</td><td>org.zkoss.zkex.zul.Borderlayout</td><td>Must set width and height, either in pixel or %. Must setStyle(&quot;position: relative;&quot;) when use within ADForm.</td></tr><tr><td>org.compiere.apps.ConfirmPanel</td><td>org.adempiere.webui.component.ConfirmPanel</td><td></td></tr><tr><td>org.compiere.apps.StatusBar</td><td>org.adempiere.webui.panel.StatusBarPanel</td><td></td></tr><tr><td>org.compiere.minigrid.MiniTable</td><td>org.adempiere.webui.component.WListbox</td><td></td></tr><tr><td>org.compiere.grid.ed.VLocator</td><td>org.adempiere.webui.editor.WLocatorEditor</td><td></td></tr><tr><td>javax.swing.event.TableModelListener</td><td>org.adempiere.webui.event.WTableModelListener</td><td></td></tr><tr><td>javax.swing.JCheckBox</td><td>org.adempiere.webui.component.Checkbox</td><td></td></tr><tr><td>org.adempiere.swing.CDialog</td><td>org.adempiere.webui.component.Window</td><td></td></tr><tr><td>Java.awt.event.ActionListener</td><td>Org.zkoss.zk.ui.event.EventListener</td><td>actionPerformed(ActionEvent) is replace by onEvent(Event)</td></tr><tr><td>Org.compiere.apps.AEnv</td><td>Org.adempiere.webui.apps.AEnv</td><td></td></tr><tr><td>Javax.swing.JScrollPane</td><td>Org.adempiere.webui.component.Panel</td><td>Most of the time, JscrollPane can be remove from the UI components tree when we port Swing form to Zk. If you are not sure, remove it and test.</td></tr><tr><td>Javax.swing.JSplitPane</td><td>Org.zkoss.zul.Splitterorg.zkoss.zkex.zul.BorderLayout</td><td>Splitter must use together with Hbox or Vbox. If that&#39;s not suitable for the layout you are trying to build, use BorderLayout instead.</td></tr><tr><td>Org.compiere.apps.ADialog</td><td>Org.adempiere.webui.window.FDialog</td><td></td></tr><tr><td>Javax.swing.table.DefaultTableModel</td><td>Org.adempiere.webui.component.ListModelTable org.adempiere.webui.component.SimpleListModel</td><td>Use ListModelTable with WListbox and SimpleListModel with Listbox.</td></tr><tr><td>Java.beans.VetoableChangeListener</td><td>Org.adempiere.webui.event.ValueChangeListener</td><td>Event listener for field editor. vetoableChange(PropertyChangeEvent) is replace by valueChange(ValueChangeEvent)</td></tr><tr><td>Org.adempiere.apps.form.FormPanel</td><td>Org.adempiere.webui.panel.ADForm</td><td>init (int WindowNo, FormFrame frame) is replace by initForm(). Use the protected method getWindowNo to access the WindowNo variable.</td></tr></tbody></table><h2 id="batch-processing-in-custom-form" tabindex="-1"><a class="header-anchor" href="#batch-processing-in-custom-form" aria-hidden="true">#</a> Batch processing in custom form</h2><ul><li>Don&#39;t use the AsyncProcess interface.</li><li>Use Clients.showBusy and AuEcho to show busy message.</li><li>Use ServerPush to execute long task on separate thread.</li><li>Example for long task and batch printing: org.adempiere.webui.apps.form.WInvoiceGen.</li></ul>',6)],r={},n=(0,i(42272).c)(r,[["render",function(e,t){return(0,o.Wz)(),(0,o.An)("div",null,a)}]])},94509:(e,t,i)=>{i.r(t),i.d(t,{data:()=>o});const o=JSON.parse('{"key":"v-74fc1c46","path":"/community/wiki/developers-guide/migrating-swing-to-zk-webui.html","title":"Porting Custom Swing Form to ZK","lang":"en-US","frontmatter":{"title":"Porting Custom Swing Form to ZK","category":"Community","star":9,"sticky":9,"tag":["Wiki","Developer\'s Guide"],"article":false,"description":"Introduction ADempiere has 2 client modes to access the ERP application: Java Swing which is rich client and runs perfectly via LAN Web-based clients such as HTML and ZK Ajax that is mostly used via the Web. All clients will access the Application Dictionary or Data Model to get the same data treatment. However the sourcecode that access and display that has to be mapped. The content below is posted by Low Heng Sin who is chiefly responsible for the ZK Ajax client completion started by Posterita. It illustrates the direct component to component mapping at the sourcecode level of the application.","head":[["meta",{"property":"og:url","content":"https://github.com/adempiere/adempiere-site.github.io/community/wiki/developers-guide/migrating-swing-to-zk-webui.html"}],["meta",{"property":"og:title","content":"Porting Custom Swing Form to ZK"}],["meta",{"property":"og:description","content":"Introduction ADempiere has 2 client modes to access the ERP application: Java Swing which is rich client and runs perfectly via LAN Web-based clients such as HTML and ZK Ajax that is mostly used via the Web. All clients will access the Application Dictionary or Data Model to get the same data treatment. However the sourcecode that access and display that has to be mapped. The content below is posted by Low Heng Sin who is chiefly responsible for the ZK Ajax client completion started by Posterita. It illustrates the direct component to component mapping at the sourcecode level of the application."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-08-25T14:41:16.000Z"}],["meta",{"property":"article:author","content":"ADempiere"}],["meta",{"property":"article:tag","content":"Wiki"}],["meta",{"property":"article:tag","content":"Developer\'s Guide"}],["meta",{"property":"article:modified_time","content":"2023-08-25T14:41:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Porting Custom Swing Form to ZK\\",\\"description\\":\\"Introduction ADempiere has 2 client modes to access the ERP application: Java Swing which is rich client and runs perfectly via LAN Web-based clients such as HTML and ZK Ajax that is mostly used via the Web. All clients will access the Application Dictionary or Data Model to get the same data treatment. However the sourcecode that access and display that has to be mapped. The content below is posted by Low Heng Sin who is chiefly responsible for the ZK Ajax client completion started by Posterita. It illustrates the direct component to component mapping at the sourcecode level of the application.\\"}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://github.com/adempiere/adempiere-site.github.io/atom.xml","title":" Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://github.com/adempiere/adempiere-site.github.io/feed.json","title":" JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://github.com/adempiere/adempiere-site.github.io/rss.xml","title":" RSS Feed"}]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Component Mapping","slug":"component-mapping","link":"#component-mapping","children":[]},{"level":2,"title":"Batch processing in custom form","slug":"batch-processing-in-custom-form","link":"#batch-processing-in-custom-form","children":[]}],"git":{"createdTime":1692974476000,"updatedTime":1692974476000,"contributors":[{"name":"Jesús Albujas","email":"134967453+tecnicoerp@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.21,"words":362},"filePathRelative":"community/wiki/developers-guide/migrating-swing-to-zk-webui.md","localizedDate":"August 25, 2023","excerpt":"<h2> Introduction</h2>\\n<ul>\\n<li>ADempiere has 2 client modes to access the ERP application:\\n<ul>\\n<li>Java Swing which is rich client and runs perfectly via LAN</li>\\n<li>Web-based clients such as HTML and ZK Ajax that is mostly used via the Web.</li>\\n</ul>\\n</li>\\n<li>All clients will access the Application Dictionary or Data Model to get the same data treatment. However the sourcecode that access and display that has to be mapped.</li>\\n<li>The content below is posted by Low Heng Sin who is chiefly responsible for the ZK Ajax client completion started by Posterita.\\n<ul>\\n<li>It illustrates the direct component to component mapping at the sourcecode level of the application.</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}')}}]);