"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8961],{76684:(e,t,i)=>{i.r(t),i.d(t,{default:()=>b});var l=i(68152);const a=(0,l.IL)('<h2 id="creating-the-rule" tabindex="-1"><a class="header-anchor" href="#creating-the-rule" aria-hidden="true">#</a> Creating the Rule</h2><p>Within the script you can use:</p><ul><li>Window context variables start with a W_ prefix</li><li>Login context variables start with G_ prefix</li><li>Parameters for callout start with A_ prefix <ul><li>A_WindowNo</li><li>A_Tab</li><li>A_Field</li><li>A_Value</li><li>A_OldValue</li><li>A_Ctx</li></ul></li></ul><p><img src="/assets/img/community/developers-guide/01_BeanShell.png" alt="BeanShell"></p><h2 id="configure-callout-from-table-column" tabindex="-1"><a class="header-anchor" href="#configure-callout-from-table-column" aria-hidden="true">#</a> Configure Callout from Table/Column</h2><p><img src="/assets/img/community/developers-guide/02_BeanShellCallout.png" alt="BeanShell2"></p>',6),n=(0,l.IL)('<h2 id="sample-code-provided-for-copy-paste-testing" tabindex="-1"><a class="header-anchor" href="#sample-code-provided-for-copy-paste-testing" aria-hidden="true">#</a> Sample Code provided for copy/paste testing</h2><p>On the Table and Column, callout reference:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@script:beanshell:BP_fillDescriptionFromName\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>On the Rule Search Key:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>if (A_Tab.getValue(&quot;Name&quot;) != null) {\n    A_Tab.setValue(&quot;Description&quot;, A_Tab.getValue(&quot;Name&quot;));\n}\nresult = &quot;&quot;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sample-code-for-setting-payment-bank-account" tabindex="-1"><a class="header-anchor" href="#sample-code-for-setting-payment-bank-account" aria-hidden="true">#</a> Sample Code for Setting Payment Bank Account</h2><p>This script will set the bank account on the Payment window based on the Tender Type and Credit Card Type.</p><p>On the Payment Table and Column, callout reference for Tender Type and Credit Card Type:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@script:beanshell:payment_setpaymentprocessor\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>On the Rule Search Key:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>beanshell:payment_setpaymentprocessor\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>On the Rule Script:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import org.compiere.model.MPayment;\n\nif(A_Tab.getValue(&quot;TenderType&quot;) != null &amp;&amp; A_Tab.getValue(&quot;CreditCardType&quot;) != null &amp;&amp; A_Tab.getValue(&quot;CreditCardType&quot;) != &quot;&quot;)\n{\n   MPayment pmt = new MPayment(A_Ctx, 0,null);\n   pmt.setTenderType(A_Tab.getValue(&quot;TenderType&quot;));\n   pmt.setC_Currency_ID(A_Tab.getValue(&quot;C_Currency_ID&quot;));\n   pmt.setCreditCardType(A_Tab.getValue(&quot;CreditCardType&quot;));\n   pmt.setPaymentProcessor();\n   A_Tab.setValue(&quot;C_BankAccount_ID&quot;, pmt.getC_BankAccount_ID());\n   pmt = null;\n}\nelse\n{\n   A_Tab.setValue(&quot;C_BankAccount_ID&quot;, 0);\n}    \nresult=&quot;&quot;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scripting-languages" tabindex="-1"><a class="header-anchor" href="#scripting-languages" aria-hidden="true">#</a> Scripting Languages</h2>',14),r={href:"http://groovy.codehaus.org/",target:"_blank",rel:"noopener noreferrer"},o={href:"http://www.jython.org/Project/index.html",target:"_blank",rel:"noopener noreferrer"},s={href:"http://www.beanshell.org/",target:"_blank",rel:"noopener noreferrer"},u=(0,l.IL)("<li><p>to call a script from a Callout follow these sample syntax:</p><ul><li>@script:beanshell:ValidateQtyOnHand</li><li>@script:groovy:ValidateQtyOnHand</li><li>@script:jython:ValidateQtyOnHand</li></ul></li><li><p>When you create the rule, you have to set in the Search Key such as:</p><ul><li>Search Key : beanshell:ValidateQtyOnHand</li><li>Search Key : groovy:ValidateQtyOnHand</li><li>Search Key : jython:ValidateQtyOnHand</li></ul></li><li><p>Set the Event Type as Callout and Rule Type as JSR 223 Scripting APIs</p></li>",3),d=(0,l.QD)("h2",{id:"see-also",tabindex:"-1"},[(0,l.QD)("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),(0,l.mY)(" See Also")],-1),c=(0,l.QD)("li",null,[(0,l.QD)("a",{href:"a"},"Script ModelValidatorLogin")],-1),p=(0,l.QD)("li",null,[(0,l.QD)("a",{href:"script-modelvalidator"},"Script ModelValidator")],-1),m=(0,l.QD)("li",null,[(0,l.QD)("a",{href:"a"},"Rule Engine Implementation")],-1),h={href:"http://scripting.dev.java.net/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://wiki.adempiere.net/ZH/Case-Study-01-Journal-31",target:"_blank",rel:"noopener noreferrer"},v={},b=(0,i(42272).c)(v,[["render",function(e,t){const i=(0,l.E1)("RouterLink"),v=(0,l.E1)("ExternalLinkIcon");return(0,l.Wz)(),(0,l.An)("div",null,[a,(0,l.QD)("ul",null,[(0,l.QD)("li",null,[(0,l.mY)("This Callout can also be called from the "),(0,l.K2)(i,{to:"/community/wiki/developers-guide/script-process.html"},{default:(0,l.Ql)((()=>[(0,l.mY)("Report & Process Window")])),_:1}),(0,l.mY)(". Just remember to set in the Rule window from which Event Type are you calling this Rule Script.")])]),n,(0,l.QD)("ul",null,[(0,l.QD)("li",null,[(0,l.QD)("p",null,[(0,l.mY)("Now standard Adempiere has uploaded jars to work with "),(0,l.QD)("a",r,[(0,l.mY)("groovy"),(0,l.K2)(v)]),(0,l.mY)(", "),(0,l.QD)("a",o,[(0,l.mY)("jython"),(0,l.K2)(v)]),(0,l.mY)(" and "),(0,l.QD)("a",s,[(0,l.mY)("beanshell"),(0,l.K2)(v)])])]),u]),d,(0,l.QD)("ul",null,[(0,l.QD)("li",null,[(0,l.K2)(i,{to:"/community/wiki/developers-guide/script-process.html"},{default:(0,l.Ql)((()=>[(0,l.mY)("Script Process")])),_:1}),(0,l.mY)(" for event rule example from a Report & Process window.")]),c,p,m,(0,l.QD)("li",null,[(0,l.QD)("a",h,[(0,l.mY)("Java Scripting"),(0,l.K2)(v)])]),(0,l.QD)("li",null,[(0,l.K2)(i,{to:"/community/wiki/developers-guide/callout.html"},{default:(0,l.Ql)((()=>[(0,l.mY)("Callout")])),_:1})]),(0,l.QD)("li",null,[(0,l.QD)("a",g,[(0,l.mY)("Rule Engine / Script Callout / Script Process"),(0,l.K2)(v)]),(0,l.mY)(" - Chinese")])])])}]])},65920:(e,t,i)=>{i.r(t),i.d(t,{data:()=>l});const l=JSON.parse('{"key":"v-bcfd1298","path":"/community/wiki/developers-guide/script-callout.html","title":"Script Callout","lang":"en-US","frontmatter":{"title":"Script Callout","category":"Community","star":9,"sticky":9,"tag":["Wiki","Developer\'s Guide"],"article":false,"description":"Creating the Rule Within the script you can use: Window context variables start with a W_ prefix Login context variables start with G_ prefix Parameters for callout start with A_ prefix A_WindowNo A_Tab A_Field A_Value A_OldValue A_Ctx","head":[["meta",{"property":"og:url","content":"https://github.com/adempiere/adempiere-site.github.io/community/wiki/developers-guide/script-callout.html"}],["meta",{"property":"og:title","content":"Script Callout"}],["meta",{"property":"og:description","content":"Creating the Rule Within the script you can use: Window context variables start with a W_ prefix Login context variables start with G_ prefix Parameters for callout start with A_ prefix A_WindowNo A_Tab A_Field A_Value A_OldValue A_Ctx"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-08-25T14:41:16.000Z"}],["meta",{"property":"article:author","content":"ADempiere"}],["meta",{"property":"article:tag","content":"Wiki"}],["meta",{"property":"article:tag","content":"Developer\'s Guide"}],["meta",{"property":"article:modified_time","content":"2023-08-25T14:41:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Script Callout\\",\\"description\\":\\"Creating the Rule Within the script you can use: Window context variables start with a W_ prefix Login context variables start with G_ prefix Parameters for callout start with A_ prefix A_WindowNo A_Tab A_Field A_Value A_OldValue A_Ctx\\"}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://github.com/adempiere/adempiere-site.github.io/atom.xml","title":" Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://github.com/adempiere/adempiere-site.github.io/feed.json","title":" JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://github.com/adempiere/adempiere-site.github.io/rss.xml","title":" RSS Feed"}]]},"headers":[{"level":2,"title":"Creating the Rule","slug":"creating-the-rule","link":"#creating-the-rule","children":[]},{"level":2,"title":"Configure Callout from Table/Column","slug":"configure-callout-from-table-column","link":"#configure-callout-from-table-column","children":[]},{"level":2,"title":"Sample Code provided for copy/paste testing","slug":"sample-code-provided-for-copy-paste-testing","link":"#sample-code-provided-for-copy-paste-testing","children":[]},{"level":2,"title":"Sample Code for Setting Payment Bank Account","slug":"sample-code-for-setting-payment-bank-account","link":"#sample-code-for-setting-payment-bank-account","children":[]},{"level":2,"title":"Scripting Languages","slug":"scripting-languages","link":"#scripting-languages","children":[]},{"level":2,"title":"See Also","slug":"see-also","link":"#see-also","children":[]}],"git":{"createdTime":1692974476000,"updatedTime":1692974476000,"contributors":[{"name":"Jesús Albujas","email":"134967453+tecnicoerp@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.16,"words":348},"filePathRelative":"community/wiki/developers-guide/script-callout.md","localizedDate":"August 25, 2023","excerpt":"<h2> Creating the Rule</h2>\\n<p>Within the script you can use:</p>\\n<ul>\\n<li>Window context variables start with a W_ prefix</li>\\n<li>Login context variables start with G_ prefix</li>\\n<li>Parameters for callout start with A_ prefix\\n<ul>\\n<li>A_WindowNo</li>\\n<li>A_Tab</li>\\n<li>A_Field</li>\\n<li>A_Value</li>\\n<li>A_OldValue</li>\\n<li>A_Ctx</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}')}}]);